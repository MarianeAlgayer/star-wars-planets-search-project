{"version":3,"sources":["components/AppIntro/AppIntro.gif","context/planetsContext.js","utils/fetchPlanets.js","utils/filterPlanets.js","utils/sortPlanets.js","utils/constants.js","context/PlanetsProvider.js","components/AppIntro/index.jsx","components/Input/index.jsx","components/NameFilter/index.jsx","components/Button/index.jsx","components/Select/index.jsx","components/NumericValuesFilter/index.jsx","components/FiltersList/index.jsx","components/SortPlanets/index.jsx","components/Filters/index.jsx","components/Table/index.jsx","pages/Home/index.jsx","App.js","index.js"],"names":["module","exports","planetsContext","createContext","fetchPlanets","a","fetch","response","json","results","forEach","planet","residents","filterPlanets","planets","numericValues","name","planetsFilteredByName","filter","toLowerCase","includes","reduce","acc","comparison","column","value","Number","sortPlanets","order","sort","filteredArray","unknownValues","sortedArray","b","COLUMN_OPTIONS","COMPARISON_OPTIONS","PlanetsProvider","children","useState","planetsData","setPlanetsData","filterByName","setFilterByName","filterByNumericValues","setFilterByNumericValues","filteredPlanets","setFilteredPlanets","sortPlanetsOrder","setSortPlanetsOrder","columnOptions","setColumnOptions","useEffect","sortedResult","localeCompare","state","Provider","AppIntro","id","src","AppIntroGif","alt","Input","testId","label","type","onChange","htmlFor","data-testid","target","NameFilter","useContext","Button","onClick","defaultProps","Select","options","map","option","key","NumericValuesFilter","setColumn","setComparison","setValue","onSubmit","event","preventDefault","undefined","selectedOptions","currentOptions","FiltersList","removeFilter","currentTarget","parentNode","currentFilters","length","className","index","SortPlanets","setSort","Filters","HEADERS","Table","header","Object","entries","Home","setTimeout","document","querySelector","scrollIntoView","behavior","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.da93aaec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AppIntro.eb444fad.gif\";","import { createContext } from 'react';\n\nconst planetsContext = createContext();\n\nexport default planetsContext;\n","const fetchPlanets = async () => {\n  const URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\n  const response = await fetch(URL);\n  const { results } = await response.json();\n\n  results.forEach((planet) => {\n    delete planet.residents;\n  });\n\n  return results;\n};\n\nexport default fetchPlanets;\n","const filterPlanets = (planets, { name }, numericValues) => {\n  const planetsFilteredByName = planets.filter((planet) => (\n    planet.name.toLowerCase().includes(name.toLowerCase())\n  ));\n\n  const result = numericValues.reduce((acc, filter) => {\n    const { comparison, column, value } = filter;\n\n    return acc.filter((planet) => {\n      switch (comparison) {\n      case 'greater than':\n        return Number(planet[column]) > value;\n\n      case 'less than':\n        return Number(planet[column]) < value;\n\n      case 'equal to':\n        return Number(planet[column]) === value;\n\n      default:\n        return true;\n      }\n    });\n  }, planetsFilteredByName);\n\n  return result;\n};\n\nexport default filterPlanets;\n","const sortPlanets = (planets, { order: { column, sort } }) => {\n  const filteredArray = planets\n    .filter((planet) => planet[column] !== 'unknown');\n\n  const unknownValues = planets\n    .filter((planet) => planet[column] === 'unknown');\n\n  const sortedArray = filteredArray.sort((a, b) => {\n    switch (sort) {\n    case 'ASC':\n      return a[column] - b[column];\n\n    case 'DESC':\n      return b[column] - a[column];\n\n    default:\n      return true;\n    }\n  });\n\n  return [...sortedArray, ...unknownValues];\n};\n\nexport default sortPlanets;\n","export const COLUMN_OPTIONS = [\n  'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water',\n];\n\nexport const COMPARISON_OPTIONS = [\n  'greater than', 'less than', 'equal to',\n];\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport planetsContext from './planetsContext';\nimport fetchPlanets from '../utils/fetchPlanets';\nimport filterPlanets from '../utils/filterPlanets';\nimport sortPlanets from '../utils/sortPlanets';\n\nimport { COLUMN_OPTIONS } from '../utils/constants';\n\nfunction PlanetsProvider({ children }) {\n  const [planetsData, setPlanetsData] = useState([]);\n  const [filterByName, setFilterByName] = useState({ name: '' });\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [filteredPlanets, setFilteredPlanets] = useState(planetsData);\n  const [sortPlanetsOrder, setSortPlanetsOrder] = useState({ order: {} });\n  const [columnOptions, setColumnOptions] = useState(COLUMN_OPTIONS);\n\n  useEffect(() => {\n    (async () => {\n      const results = await fetchPlanets();\n      const sortedResult = results.sort((a, b) => a.name.localeCompare(b.name));\n      setPlanetsData(sortedResult);\n    })();\n  }, []);\n\n  useEffect(() => {\n    const results = filterPlanets(planetsData, filterByName, filterByNumericValues);\n    setFilteredPlanets(results);\n  }, [planetsData, filterByName, filterByNumericValues]);\n\n  useEffect(() => {\n    const results = sortPlanets(filteredPlanets, sortPlanetsOrder);\n    setFilteredPlanets(results);\n  }, [sortPlanetsOrder]);\n\n  const state = {\n    filterByName,\n    setFilterByName,\n    filterByNumericValues,\n    setFilterByNumericValues,\n    filteredPlanets,\n    sortPlanetsOrder,\n    setSortPlanetsOrder,\n    columnOptions,\n    setColumnOptions,\n  };\n\n  return (\n    <planetsContext.Provider value={ state }>\n      { children }\n    </planetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PlanetsProvider;\n","import React from 'react';\n\nimport AppIntroGif from './AppIntro.gif';\n\nimport './style.css';\n\nfunction AppIntro() {\n  return (\n    <section id=\"app-intro\">\n      <img src={ AppIntroGif } alt=\"App intro gif\" />\n    </section>\n  );\n}\n\nexport default AppIntro;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nconst Input = ({ id, testId, label, type, value, name, onChange }) => (\n  <label htmlFor={ id }>\n    {' '}\n    {label}\n    {' '}\n    <input\n      id={ id }\n      data-testid={ testId }\n      type={ type }\n      value={ value }\n      name={ name }\n      onChange={ ({ target }) => (\n        id === 'name-filter'\n          ? onChange({ name: target.value })\n          : onChange(target.value)) }\n    />\n  </label>\n);\n\nInput.propTypes = {\n  id: PropTypes.string,\n  testId: PropTypes.string,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n}.isRequired;\n\nexport default Input;\n","import React, { useContext } from 'react';\nimport planetsContext from '../../context/planetsContext';\n\nimport Input from '../Input';\n\nfunction NameFilter() {\n  const {\n    filterByName: { name },\n    setFilterByName,\n  } = useContext(planetsContext);\n\n  return (\n    <Input\n      id=\"name-filter\"\n      testId=\"name-filter\"\n      label=\"Planet name\"\n      type=\"text\"\n      value={ name }\n      name=\"name-filter\"\n      onChange={ setFilterByName }\n    />\n  );\n}\n\nexport default NameFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nconst Button = ({ type, testId, onClick, label }) => (\n  <button\n    type={ type ? 'submit' : 'button' }\n    data-testid={ testId }\n    onClick={ onClick }\n  >\n    {' '}\n    {label}\n    {' '}\n  </button>\n);\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  testId: PropTypes.string,\n  onClick: PropTypes.func,\n  label: PropTypes.string.isRequired,\n};\n\nButton.defaultProps = { testId: '', onClick: null };\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nconst Select = ({ id, testId, label, value, onChange, options }) => (\n  <label htmlFor={ id }>\n    {' '}\n    {label}\n    {' '}\n    <select\n      id={ id }\n      data-testid={ testId }\n      value={ value }\n      onChange={ ({ target }) => onChange(target.value) }\n    >\n      { options.map((option) => <option key={ option }>{ option }</option>) }\n    </select>\n  </label>\n);\n\nSelect.propTypes = {\n  id: PropTypes.string,\n  testId: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  options: PropTypes.array,\n}.isRequired;\n\nexport default Select;\n","import React, { useContext, useState } from 'react';\nimport planetsContext from '../../context/planetsContext';\n\nimport Button from '../Button';\nimport Select from '../Select';\nimport Input from '../Input';\n\nimport { COMPARISON_OPTIONS } from '../../utils/constants';\n\nfunction NumericValuesFilter() {\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues,\n    columnOptions,\n    setColumnOptions,\n  } = useContext(planetsContext);\n\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('greater than');\n  const [value, setValue] = useState(0);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (column === undefined) {\n      return;\n    }\n\n    const selectedOptions = {\n      column,\n      comparison,\n      value: Number(value),\n    };\n\n    setFilterByNumericValues([...filterByNumericValues, selectedOptions]);\n\n    const currentOptions = columnOptions.filter((option) => (\n      option !== selectedOptions.column\n    ));\n\n    setColumnOptions(currentOptions);\n    setColumn(currentOptions[0]);\n  };\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <Select\n        id=\"column-filter\"\n        testId=\"column-filter\"\n        label=\"Column\"\n        value={ column }\n        onChange={ setColumn }\n        options={ columnOptions }\n      />\n\n      <Select\n        id=\"comparison-filter\"\n        testId=\"comparison-filter\"\n        label=\"Comparison\"\n        value={ comparison }\n        onChange={ setComparison }\n        options={ COMPARISON_OPTIONS }\n      />\n\n      <Input\n        id=\"value-filter\"\n        testId=\"value-filter\"\n        label=\"Value\"\n        type=\"number\"\n        value={ value }\n        name=\"value-filter\"\n        onChange={ setValue }\n      />\n\n      <Button\n        type=\"submit\"\n        testId=\"button-filter\"\n        label=\"FILTER\"\n      />\n    </form>\n  );\n}\n\nexport default NumericValuesFilter;\n","import React, { useContext } from 'react';\nimport { FaTrash } from 'react-icons/fa';\nimport planetsContext from '../../context/planetsContext';\n\nimport Button from '../Button';\n\nimport { COLUMN_OPTIONS } from '../../utils/constants';\n\nfunction FiltersList() {\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues,\n    columnOptions,\n    setColumnOptions,\n  } = useContext(planetsContext);\n\n  const removeFilter = ({ currentTarget }) => {\n    const { id } = currentTarget.parentNode;\n\n    const currentFilters = filterByNumericValues.filter((filter) => filter.column !== id);\n\n    setFilterByNumericValues(currentFilters);\n    setColumnOptions([...columnOptions, id]);\n  };\n\n  const removeAllFilters = () => {\n    setFilterByNumericValues([]);\n    setColumnOptions(COLUMN_OPTIONS);\n  };\n\n  return (\n    <div id=\"filters-list\">\n      { filterByNumericValues.length > 0\n        && (\n          <div className=\"title-wrapper\">\n            <h2>Applied filters</h2>\n\n            <Button\n              testId=\"button-remove-filters\"\n              onClick={ removeAllFilters }\n              label=\"REMOVE ALL FILTERS\"\n            />\n          </div>\n        )}\n\n      { filterByNumericValues\n        .map((filter, index) => (\n          <div\n            key={ index }\n            className=\"applied-filter\"\n            id={ filter.column }\n            data-testid=\"filter\"\n          >\n            <p>\n              {`${filter.column} | ${filter.comparison} | ${filter.value}`}\n            </p>\n\n            <Button\n              onClick={ removeFilter }\n              label={ <FaTrash /> }\n            />\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default FiltersList;\n","import React, { useContext, useState } from 'react';\nimport planetsContext from '../../context/planetsContext';\n\nimport Button from '../Button';\nimport Select from '../Select';\nimport Input from '../Input';\n\nimport { COLUMN_OPTIONS } from '../../utils/constants';\n\nfunction SortPlanets() {\n  const {\n    setSortPlanetsOrder,\n  } = useContext(planetsContext);\n\n  const [column, setColumn] = useState('population');\n  const [sort, setSort] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const selectedOptions = {\n      column,\n      sort,\n    };\n\n    setSortPlanetsOrder({\n      order: selectedOptions,\n    });\n  };\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <Select\n        id=\"column-sort\"\n        testId=\"column-sort\"\n        label=\"Sort\"\n        value={ column }\n        onChange={ setColumn }\n        options={ COLUMN_OPTIONS }\n      />\n\n      <div className=\"radio-buttons-wrapper\">\n        <Input\n          id=\"column-sort-input-asc\"\n          testId=\"column-sort-input-asc\"\n          label=\"Ascending\"\n          type=\"radio\"\n          value=\"ASC\"\n          name=\"column-sort\"\n          onChange={ setSort }\n        />\n\n        <Input\n          id=\"column-sort-input-desc\"\n          testId=\"column-sort-input-desc\"\n          label=\"Descending\"\n          type=\"radio\"\n          value=\"DESC\"\n          name=\"column-sort\"\n          onChange={ setSort }\n        />\n      </div>\n\n      <Button\n        type=\"submit\"\n        testId=\"column-sort-button\"\n        label=\"SORT\"\n      />\n    </form>\n  );\n}\n\nexport default SortPlanets;\n","import React from 'react';\n\nimport NameFilter from '../NameFilter';\nimport NumericValuesFilter from '../NumericValuesFilter';\nimport FiltersList from '../FiltersList';\nimport SortPlanets from '../SortPlanets';\n\nimport './style.css';\n\nfunction Filters() {\n  return (\n    <section id=\"filters\">\n      <div id=\"filters-wrapper\">\n        <NameFilter />\n        <NumericValuesFilter />\n      </div>\n\n      <div id=\"sort-wrapper\">\n        <SortPlanets />\n      </div>\n\n      <FiltersList />\n    </section>\n  );\n}\n\nexport default Filters;\n","import React, { useContext } from 'react';\nimport planetsContext from '../../context/planetsContext';\n\nimport './style.css';\n\nconst HEADERS = [\n  'Name', 'Rotation Period', 'Orbital Period', 'Diameter', 'Climate', 'Gravity',\n  'Terrain', 'Surface Water', 'Population', 'Films', 'Created', 'Edited', 'URL',\n];\n\nfunction Table() {\n  const {\n    filteredPlanets,\n  } = useContext(planetsContext);\n\n  return (\n    <section id=\"table-wrapper\">\n      <table>\n        <thead>\n          <tr>\n            { HEADERS.map((header) => <th key={ header }>{ header }</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          { filteredPlanets\n            .map((planet) => (\n              <tr key={ planet.name }>\n                { Object.entries(planet).map(([key, value]) => (\n                  key === 'name'\n                    ? <td key={ value } data-testid=\"planet-name\">{ value }</td>\n                    : <td key={ value }>{ value }</td>\n                ))}\n              </tr>))}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n\nexport default Table;\n","import React, { useEffect } from 'react';\nimport { IoPlanet } from 'react-icons/io5';\n\nimport AppIntro from '../../components/AppIntro';\nimport Filters from '../../components/Filters';\nimport Table from '../../components/Table';\n\nimport './style.css';\n\nfunction Home() {\n  const TEN_SEC = 10000;\n\n  useEffect(() => {\n    setTimeout(() => {\n      document.querySelector('#planets-search').scrollIntoView({\n        behavior: 'smooth',\n      });\n    }, TEN_SEC);\n  }, []);\n\n  return (\n    <main>\n      <AppIntro />\n\n      <div id=\"planets-search\">\n        <h1>\n          Star Wars Planets Search\n          {' '}\n          <IoPlanet />\n          {' '}\n        </h1>\n\n        <Filters />\n        <Table />\n      </div>\n    </main>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nimport PlanetsProvider from './context/PlanetsProvider';\nimport Home from './pages/Home';\n\nimport './styles/main.css';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <Home />\n    </PlanetsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}